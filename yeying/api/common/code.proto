syntax = "proto3";
// Note: proto3 没有像 proto2 那样显式的 `required` 关键字，在业务逻辑层次上处理必填字段

/**
 * TODO: 未来common目录下，统一生成到独立的包里面方便其他项目集成生成的代码，目前包的路径处理需要服务端或者客户端自行处理；
 * 请坚持使用package关键字，其好处如下：
 * 1. 组织和管理消息和服务：通过将它们归属到特定的包中，可以更好地组织和管理它们。
 * 2. 防止命名冲突：不同package下的消息和服务可以使用相同的名称，因为它们在不同的包命名空间中。
 * 3. 代码生成工具支持：代码生成工具可以根据指定的package生成相应的包结构，使得生成的代码更具可读性和可维护性。
 */
package yeying.api.common;
option go_package = "yeying/api/common";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};
/**
 * 接口的响应状态码定义遵循的规则，必须包含以下4个说明：
 * 1、编码
 * 2、编号
 * 3、含义
 * 4、使用场景
 */
enum ResponseCodeEnum {
  // 未知编码，是一种占位符
  RESPONSE_CODE_UNKNOWN = 0;

  /**
   * 含义：操作完成
   * 使用场景：成功创建、成功提交
   */
  OK = 1;

  /**
   * 含义：提供的参数无效或不符合预期
   * 使用场景：当接收到客户端请求参数不正确时返回
   */
  INVALID_ARGUMENT = 2;

  /**
   * 含义：请求未通过身份验证
   * 使用场景：当请求需要身份验证但未提供有效凭据时返回
   */
  UNAUTHENTICATED = 3;

  /**
   * 含义：请求无法被执行，因为没有足够的权限
   * 使用场景：当客户端没有执行请求所需操作的权限时返回
   */
  PERMISSION_DENIED = 4;

  /**
   * 含义：请求对象或资源未找到
   * 使用场景：当请求的对象或资源不存在时返回
   */
  NOT_FOUND = 5;

  /**
   * 含义：请求创建的对象已经存在
   * 使用场景：当请求创建的对象（如用户、资源等）已经存在时返回
   */
  ALREADY_EXISTS = 6;

  /**
   * 含义：超过了资源使用限制
   * 使用场景：当请求操作超过了预先设定的限制时返回
   */
  LIMIT_EXCEEDED = 7;

  /**
   * 含义：请求的服务当前不可用
   * 使用场景：当请求的服务不可用（例如服务器维护、过载等）时返回
   */
  UNAVAILABLE = 8;

  /**
   * 含义：未知错误
   * 使用场景：当出现未知错误时返回或无法精确匹配到其他错误码时使用
   */
  UNKNOWN_ERROR = 9;

  /**
   * 含义：网络错误
   * 使用场景：应为网络错误，无法发送到服务器
   */
  NETWORK_ERROR = 10;

  /**
   * 含义：无效证书
   * 使用场景：浏览器无法识别证书，在浏览器中添加为受信任证书
   */
  INVALID_CERT = 11;

  /**
   * 含义：不支持
   * 使用场景：接口、服务不支持
   */
  NOT_SUPPORTED = 12;

  /**
 * 含义：数据损坏
 * 使用场景：验证数据的签名不通过，当和存储供应商签约资产时，用户发送到供应商的数据验证签名不通过
 */
  DATA_CORRUPTED = 13;
}

/**
 * 合约的状态码需要遵守的规则：
 * 1、编码
 * 2、编号
 * 3、含义
 * 4、使用场景
 */
enum ContractStatusEnum {
  // 未知编码，是一种占位符
  CONTRACT_STATUS_UNKNOWN = 0;
  // 未生效，拟定了一份合同，参与方没有完全签字
  CONTRACT_STATUS_INACTIVATED = 1;
  // 生效中，合同的参与方都已签字认可，合同已经开始工作
  CONTRACT_STATUS_ACTIVATED = 2;
  // 过期了，合同已经过期了，合同已停止工作
  CONTRACT_STATUS_EXPIRED = 3;
  // 终止了，合同的参与方中有人主动退出了合同
  CONTRACT_STATUS_CANCELED = 4;
}

// 语言类型
enum LanguageCodeEnum {
  // 未知编码，是一种占位符
  LANGUAGE_CODE_UNKNOWN = 0;
  // 简体中文
  LANGUAGE_CODE_ZH_CH = 1;
  // 美国英语
  LANGUAGE_CODE_EN_US = 2;
}

// 应用编码，每个应用都有一个类别，每个应用都可以绑定都个服务编码。
enum ApplicationCodeEnum {
  // 未知编码，是一种占位符
  APPLICATION_CODE_UNKNOWN = 0;
  // 社区集市，提供应用、服务以及智能合约的发布、上线、下线等服务，用户可以在应用集市组装自己的应用；
  APPLICATION_CODE_MARKET = 1;
  // 资产应用
  APPLICATION_CODE_ASSET = 2;
  // 知识库应用
  APPLICATION_CODE_KNOWLEDGE = 3;
  // 智能管家应用，包括钱包
  APPLICATION_CODE_KEEPER = 4;
  // 社交应用
  APPLICATION_CODE_SOCIAL = 5;
  // 工作台应用
  APPLICATION_CODE_WORKBENCH = 6;
}

// 服务编码，每个服务都可以绑定多个API编码，对外提供多套服务接口
enum ServiceCodeEnum {
  // 未知编码，是一种占位符
  SERVICE_CODE_UNKNOWN = 0;
  // 网络节点供应商
  SERVICE_CODE_NODE = 1;
  // 仓储服务供应商
  SERVICE_CODE_WAREHOUSE = 2;
  // 智能体供应商
  SERVICE_CODE_AGENT = 3;
  // 模型上下文供应商
  SERVICE_CODE_MCP = 4;
  // RAG检索增强生成供应商
  SERVICE_CODE_RAG = 5;
  // 电子档案系统
  SERVICE_CODE_CORRECTION = 6;
}

// API编码，针对服务做一些原子的、标准化的工作，方便第三方接入区块链网络，也方便服务使用者集成使用
enum ApiCodeEnum {
  // 未知编码，是一种占位符
  API_CODE_UNKNOWN = 0;
  // 用户服务
  API_CODE_USER = 1;
  // 身份服务
  API_CODE_IDENTITY = 2;
  // 大模型服务API
  API_CODE_LLM_SERVICE = 3;
  // 大模型供应商API
  API_CODE_LLM_PROVIDER = 4;
  // 资产服务API
  API_CODE_ASSET_SERVICE = 5;
  // 资产块API
  API_CODE_ASSET_BLOCK = 6;
  // 资产链接API
  API_CODE_ASSET_LINK = 7;
  // 资产命名空间API
  API_CODE_ASSET_NAMESPACE = 8;
  // 资产回收站API
  API_CODE_ASSET_RECYCLE = 9;
  // 证书服务
  API_CODE_CERTIFICATE = 10;
  // 存储服务
  API_CODE_STORAGE = 11;
  // 应用仓库
  API_CODE_APPLICATION = 12;
  // 事件服务
  API_CODE_EVENT = 13;
  // 邀请码服务
  API_CODE_INVITATION = 14;
  // 服务接口
  API_CODE_SERVICE = 15;
  // RAG 接口
  API_CODE_RAG = 16;
}

// 图片格式
enum ImageFormatEnum {
  // 未知图片格式，是一种占位符
  IMAGE_FORMAT_UNKNOWN = 0;
  // PNG格式
  IMAGE_FORMAT_PNG = 1;
}

// 数字格式
enum DigitalFormatEnum {
  // 未知数字格式，是一种占位符
  DIGITAL_FORMAT_UNKNOWN = 0;

  // 文本
  DIGITAL_FORMAT_TEXT = 1;

  // 图片
  DIGITAL_FORMAT_IMAGE = 2;

  // 视频
  DIGITAL_FORMAT_VIDEO = 3;

  // 音频
  DIGITAL_FORMAT_AUDIO = 4;

  // 应用
  DIGITAL_FORMAT_APP = 5;

  // 未知
  DIGITAL_FORMAT_OTHER = 10000;
}

// 内容格式
enum ContentFormatEnum {
  CONTENT_FORMAT_UNKNOWN = 0;
  CONTENT_FORMAT_URL = 1;
  CONTENT_FORMAT_BASE64 = 2;
}

// 会话场景
enum SessionSceneEnum {
  // 未知编码，是一种占位符
  SESSION_SCENE_UNKNOWN = 0;
  // 对话
  SESSION_SCENE_DIALOGUE = 1;
  // 作图
  SESSION_SCENE_DRAWING = 2;
  // 翻译
  SESSION_SCENE_TRANSLATION = 3;
}

// 会话角色
enum SessionRoleEnum {
  // 未知编码，是一种占位符
  SESSION_ROLE_UNKNOWN = 0;
  // 参与者
  SESSION_ROLE_PARTICIPANT = 1;
  // 管理员
  SESSION_ROLE_ADMIN = 2;
}

// 参与类型
enum ParticipantTypeEnum {
  // 未知编码，是一种占位符
  PARTICIPANT_TYPE_UNKNOWN = 0;
  // 服务
  PARTICIPANT_TYPE_SERVICE = 1;
  // 人
  PARTICIPANT_TYPE_PEOPLE = 2;
}

// 应用状态
enum ApplicationStatusEnum {
  // 未知编码，是一种占位符
  APPLICATION_STATUS_UNKNOWN = 0;
  // 已创建
  APPLICATION_STATUS_CREATED = 1;
  // 已审计
  APPLICATION_STATUS_AUDITED = 2;
  // 已拒绝
  APPLICATION_STATUS_REFUSED = 3;
  // 已下架
  APPLICATION_STATUS_OFFLINE = 4;
  // 已上线
  APPLICATION_STATUS_ONLINE = 5;
}

// 密码学类型
enum CipherTypeEnum {
  // 未知编码，是一种占位符
  CIPHER_TYPE_UNKNOWN = 0;
  // AES_GCM，加密算法
  CIPHER_TYPE_AES_GCM_256 = 1;
}

// 鉴权类型
enum AuthenticateTypeEnum {
  // 未知编码，是一种占位符
  AUTHENTICATE_TYPE_UNKNOWN = 0;
  // 基于证书的认证
  AUTHENTICATE_TYPE_CERT = 1;
  // 基于token的认证
  AUTHENTICATE_TYPE_TOKEN = 2;
}
