syntax = "proto3";
option go_package = "yeying/api/content";
package yeying.api.content;

import "yeying/api/common/message.proto";
import "yeying/api/common/code.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

/**
 * 数字内容的流动采用生产、存储、服务分离的技术，也就是采归采、存归存、取归取方式。以文本内容为例，爬取内容、创作内容、分发内容、以及阅读内容，独立
 * 运作，只要接口版本匹配就能工作，然后以创作和阅读作为网络驱动力和激励核心因素，主要目的有两个：
 * 1、促进在分散式网络（web3网络中）中从新分配网络资源和流量；
 * 2、减少重复工作，协作保持内容新鲜度；
 *
 */
service Knowledge {
  /**
   * 内容通知
   */
  rpc Search(SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
      post: "/api/v1/knowledge/search"
      body: "*"
    };
  }

  /**
   * 内容保鲜
   */
  rpc Append(AppendRequest) returns (AppendResponse) {
    option (google.api.http) = {
      post: "/api/v1/knowledge/append"
      body: "*"
    };
  }
}

enum ContentType {
  ARTICLE = 0;
}

message SearchRequest {
  repeated KnowledgeMetadata articleMetadata = 1;
}

message SearchResponse {
  common.ResponseStatus status = 1;
}

message KnowledgeMetadata {
  common.DigitalFormatEnum format = 1;
  string hash = 2;
  string author = 3;
  string source = 4;
  string publishTime = 5;
  string keyword = 6;
  string summary = 7;
  string content = 8;
}

message AppendMetadata {
  string hash = 1;
  string subscriber = 2;
  string content = 3;
}

message AppendRequest {
  repeated AppendMetadata appendMetadata = 1;
}

message AppendResponse {
  common.ResponseStatus status = 1;
}