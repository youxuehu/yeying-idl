syntax = "proto3";
option go_package = "yeying/api/correction";
package yeying.api.correction;
import "yeying/api/common/message.proto";
import "google/protobuf/wrappers.proto";
import "yeying/api/correction/meta.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

/**
消息盒子
 */
service Message {
  // 列表
  rpc List(MessageListRequest) returns (MessageListResponse) {
    option (google.api.http) = {
      post: "/api/v1/message/list"
      body: "*"
    };
  }
  // 查询消息数量
  rpc Count(CountRequest) returns (CountResponse) {
    option (google.api.http) = {
      post: "/api/v1/message/count"
      body: "*"
    };
  }
  // 根据状态查询消息已读数量和未读数量
  rpc ListBy(ListByRequest) returns (ListByResponse) {
    option (google.api.http) = {
      post: "/api/v1/message/listBy"
      body: "*"
    };
  }
  // 标记为已读
  rpc MarkAsRead(MarkAsReadRequest) returns (MarkAsReadResponse) {
    option (google.api.http) = {
      post: "/api/v1/message/markAsRead"
      body: "*"
    };
  }
}
// 列表
message MessageListRequest {
  common.MessageHeader header = 1;
  MessageListRequestBody body = 2;
}
message MessageListRequestBody {
  common.RequestPage page = 3;
}
message MessageListResponse {
  common.MessageHeader header = 1;
  MessageListResponseBody body = 2;
}
message MessageListResponseBody {
  common.ResponseStatus status = 1;
  // repeated 表示 List
  repeated MessageMetadata list = 2;
  common.ResponsePage page = 3;
}

// 消息数量
message CountRequest {
  common.MessageHeader header = 1;
  CountRequestBody body = 2;
}
message CountRequestBody {
}
message CountResponse {
  common.MessageHeader header = 1;
  CountResponseBody body = 2;
}
message CountResponseBody {
  common.ResponseStatus status = 1;
  repeated CountMetadata meta = 2;
}
message CountMetadata {
  int32 type = 1;
  int32 count = 2;
}
// 根据状态查询数量列表
message ListByRequest {
  common.MessageHeader header = 1;
  ListByRequestBody body = 2;
}
message ListByRequestBody {
  int32 status = 1;
  int32 type = 2;
}
message ListByResponse {
  common.MessageHeader header = 1;
  ListByResponseBody body = 2;
}
message ListByResponseBody {
  common.ResponseStatus status = 1;
  repeated MessageMetadata meta = 2;
  int32 count = 3;
}
// 标记为已读
message MarkAsReadRequest {
  common.MessageHeader header = 1;
  MarkAsReadRequestBody body = 2;
}
message MarkAsReadRequestBody {
  string uid = 1;
}
message MarkAsReadResponse {
  common.MessageHeader header = 1;
  MarkAsReadResponseBody body = 2;
}
message MarkAsReadResponseBody {
  common.ResponseStatus status = 1;
}