syntax = "proto3";
option go_package = "yeying/api/correction";
package yeying.api.correction;
import "yeying/api/common/message.proto";
import "yeying/api/correction/imagecontent.proto";
import "yeying/api/correction/meta.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

/**
作业管理
 */
service Assignment {
  // 老师上传作业, 图片题目识别 (OCR)，将图片上的题目转换为文字信息存储到 DB
  // 对应 DB 表：
  // correction.test_paper，试卷
  // correction.question_collection，题目
  // correction.answer_collection，答案
  // correction.warehouse，资产仓库
  rpc Upload(AssignmentUploadRequest) returns (AssignmentUploadResponse) {
    option (google.api.http) = {
      post: "/api/v1/assignment/upload"
      body: "*"
    };
  }
  // 大模型生成答案 (做题)，从题库中获取题目，调用解题的大模型生成对应题目的答案，并保存到 DB
  // 对应 DB 表：
  // correction.test_paper，试卷
  // correction.question_collection，题目
  // correction.answer_collection，答案
  // correction.warehouse，资产仓库
  rpc BigModelGenerate(AssignmentBigModelRequest) returns (AssignmentBigModelResponse) {
    option (google.api.http) = {
      post: "/api/v1/assignment/bigModelGenerate"
      body: "*"
    };
  }
  // 人工生成答案，人工做题，拍照上传生成题库答案
  rpc ArtificialGenerate(AssignmentArtificialRequest) returns (AssignmentArtificialResponse) {
    option (google.api.http) = {
      post: "/api/v1/assignment/artificialGenerate"
      body: "*"
    };
  }
  // 学生加减，该任务对那些学生可见和不可见，老师可以自己来调整
  rpc StudentAction(StudentActionRequest) returns (StudentActionResponse) {
    option (google.api.http) = {
      post: "/api/v1/assignment/studentAction"
      body: "*"
    };
  }
  // 作业批改，学生做完试卷后提交给老师，老师统一拍照上传批改处理
  rpc Correction(AssignmentCorrectionRequest) returns (AssignmentCorrectionResponse) {
    option (google.api.http) = {
      post: "/api/v1/assignment/correction"
      body: "*"
    };
  }

}

// 上传
message AssignmentUploadRequest {
  common.MessageHeader header = 1;
  AssignmentUploadRequestBody body = 2;
}
message AssignmentUploadRequestBody {
  // list 支持批量图片url
  // 试卷上传，支持多张图片，是个 json 数组
  // 格式：[{"index":1,"url":"url1"},{"index":2,"url":"url2"}]
  repeated UrlMetaData urlMetaData = 1;
  // 教学任务uid
  string taskUid = 2;
  /**
  图片类型：题目/答案/题目和答案
   */
  correction.ImageContentTypeEnum type = 3;
  // 学科：语文 数学 英语
  string subject = 4;
  // 试卷名称
  string testPaperName = 5;
}

message AssignmentUploadResponse {
  common.MessageHeader header = 1;
  AssignmentUploadResponseBody body = 2;
}
message AssignmentUploadResponseBody {
  common.ResponseStatus status = 1;
  // 大模型返回的数据
  string result = 2;
}
// 大模型做题
message AssignmentBigModelRequest {
  common.MessageHeader header = 1;
  AssignmentBigModelRequestBody body = 2;
}
message AssignmentBigModelRequestBody {
  // 题目文字
  // 一题一题来做，每次只做一题，分多次做，后台提交做题任务，任务排队，任务调度
  string question = 1;
}
message AssignmentBigModelResponse {
  common.MessageHeader header = 1;
  AssignmentBigModelResponseBody body = 2;
}
message AssignmentBigModelResponseBody {
  common.ResponseStatus status = 1;
  // 大模型返回的数据
  string result = 2;
}
// 人工做题，拍照上传答案，大模型识别图片题目文字和对应的答案
message AssignmentArtificialRequest {
  common.MessageHeader header = 1;
  AssignmentArtificialRequestBody body = 2;
}
message AssignmentArtificialRequestBody {
  // 答案拍照的照片url
  string fileUrl = 1;
}
message AssignmentArtificialResponse {
  common.MessageHeader header = 1;
  AssignmentArtificialResponseBody body = 2;
}
message AssignmentArtificialResponseBody {
  common.ResponseStatus status = 1;
  // 大模型返回的数据
  string result = 2;
}

// 学生加减
// 添加学生，减少学生
message StudentActionRequest {
  common.MessageHeader header = 1;
  StudentActionRequestBody body = 2;
}
message StudentActionRequestBody {
  // 教学任务ID
  string taskUid = 1;
  // 学生ID
  string did = 2;
  // 操作，添加/减少
  string action = 3;
}
message StudentActionResponse {
  common.MessageHeader header = 1;
  StudentActionResponseBody body = 2;
}
message StudentActionResponseBody {
  common.ResponseStatus status = 1;
}

// 批改，题目 + 答案，调用大模型批改
message AssignmentCorrectionRequest {
  common.MessageHeader header = 1;
  AssignmentCorrectionRequestBody body = 2;
}
message AssignmentCorrectionRequestBody {
  // 根据题目 + 答案组装 prompt
  // prompt 提交大模型批改
  string qa = 1;
}
message AssignmentCorrectionResponse {
  common.MessageHeader header = 1;
  AssignmentCorrectionResponseBody body = 2;
}
message AssignmentCorrectionResponseBody {
  common.ResponseStatus status = 1;
  // 大模型返回的数据
  string result = 2;
}