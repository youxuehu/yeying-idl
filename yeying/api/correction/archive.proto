syntax = "proto3";
option go_package = "yeying/api/correction";
package yeying.api.correction;
import "yeying/api/common/message.proto";
import "google/protobuf/wrappers.proto";
import "yeying/api/correction/meta.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

/**
档案管理
 */
service Archive {
  // 列表
  rpc List(ArchiveListRequest) returns (ArchiveListResponse) {
    option (google.api.http) = {
      post: "/api/v1/archive/list"
      body: "*"
    };
  }
  // 详情：老师调用，根据 uid 主键查询
  rpc Detail(ArchiveDetailRequest) returns (ArchiveDetailResponse) {
    option (google.api.http) = {
      post: "/api/v1/archive/detail"
      body: "*"
    };
  }
  // 详情：学生调用，根据 studentDid 调用
  rpc DetailByStudentDid(ArchiveDetailStudentRequest) returns (ArchiveDetailStudentResponse) {
    option (google.api.http) = {
      post: "/api/v1/archive/detailByStudentDid"
      body: "*"
    };
  }
  // 添加
  rpc Add(ArchiveAddRequest) returns (ArchiveAddResponse) {
    option (google.api.http) = {
      post: "/api/v1/archive/add"
      body: "*"
    };
  }
  // 删除
  rpc Delete(ArchiveDeleteRequest) returns (ArchiveDeleteResponse) {
    option (google.api.http) = {
      post: "/api/v1/archive/delete"
      body: "*"
    };
  }
  // 修改
  rpc Update(ArchiveUpdateRequest) returns (ArchiveUpdateResponse) {
    option (google.api.http) = {
      post: "/api/v1/archive/update"
      body: "*"
    };
  }
}
// 列表:老师调用
message ArchiveListRequest {
  common.MessageHeader header = 1;
  ArchiveListRequestBody body = 2;
}
message ArchiveListRequestBody {
  // 老师 did
  string teacherDid = 1;
  // 档案名称：模糊查询
  string name = 2;
  common.RequestPage page = 3;
}
message ArchiveListResponse {
  common.MessageHeader header = 1;
  ArchiveListResponseBody body = 2;
}
message ArchiveListResponseBody {
  common.ResponseStatus status = 1;
  // repeated 表示 List
  repeated ArchiveMetadata list = 2;
  common.ResponsePage page = 3;
}

// 详情
message ArchiveDetailRequest {
  common.MessageHeader header = 1;
  ArchiveDetailRequestBody body = 2;
}
message ArchiveDetailRequestBody {
  string uid = 1;
}
message ArchiveDetailResponse {
  common.MessageHeader header = 1;
  ArchiveDetailResponseBody body = 2;
}
message ArchiveDetailResponseBody {
  common.ResponseStatus status = 1;
  ArchiveMetadata meta = 2;
}
// 详情：根据 studentDid 查询
message ArchiveDetailStudentRequest {
  common.MessageHeader header = 1;
  ArchiveDetailStudentRequestBody body = 2;
}
message ArchiveDetailStudentRequestBody {
  string studentDid = 1;
}
message ArchiveDetailStudentResponse {
  common.MessageHeader header = 1;
  ArchiveDetailStudentResponseBody body = 2;
}
message ArchiveDetailStudentResponseBody {
  common.ResponseStatus status = 1;
  ArchiveMetadata meta = 2;
}
// 添加
message ArchiveAddRequest {
  common.MessageHeader header = 1;
  ArchiveAddRequestBody body = 2;
}
message ArchiveAddRequestBody {
  ArchiveMetadata meta = 1;
}
message ArchiveAddResponse {
  common.MessageHeader header = 1;
  ArchiveAddResponseBody body = 2;
}
message ArchiveAddResponseBody {
  common.ResponseStatus status = 1;
  ArchiveMetadata meta = 2;
}
// 删除
message ArchiveDeleteRequest {
  common.MessageHeader header = 1;
  ArchiveDeleteRequestBody body = 2;
}
message ArchiveDeleteRequestBody {
  string uid = 1;
}
message ArchiveDeleteResponse {
  common.MessageHeader header = 1;
  ArchiveDeleteResponseBody body = 2;
}
message ArchiveDeleteResponseBody {
  common.ResponseStatus status = 1;
  ArchiveMetadata meta = 2;
}
// 修改
message ArchiveUpdateRequest {
  common.MessageHeader header = 1;
  ArchiveUpdateRequestBody body = 2;
}
message ArchiveUpdateRequestBody {
  ArchiveMetadata meta = 1;
}
message ArchiveUpdateResponse {
  common.MessageHeader header = 1;
  ArchiveUpdateResponseBody body = 2;
}
message ArchiveUpdateResponseBody {
  common.ResponseStatus status = 1;
  ArchiveMetadata meta = 2;
}