syntax = "proto3";
option go_package = "yeying/api/user";
package yeying.api.user;
import "google/protobuf/wrappers.proto";
import "yeying/api/common/message.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service User {
  // 添加用户
  rpc Add(AddUserRequest) returns(AddUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/add"
      body: "*"
    };
  }
  // 获取用户
  rpc Detail(UserDetailRequest) returns(UserDetailResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/detail"
      body: "*"
    };
  }
  // 用户列表
  rpc List(UserListRequest) returns(UserListResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/list"
      body: "*"
    };
  }
  // 删除用户
  rpc Delete(DeleteUserRequest) returns(DeleteUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/delete"
      body: "*"
    };
  }
  // 修改用户信息
  rpc Update(UpdateUserRequest) returns(UpdateUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/update"
      body: "*"
    };
  }
  // 修改用户状态，冻结/解冻
  rpc UpdateStatus(UpdateStatusRequest) returns(UpdateStatusResponse) {
    option (google.api.http) = {
      post: "/api/v1/user/updateStatus"
      body: "*"
    };
  }
}

message UpdateStatusRequest {
  common.MessageHeader header = 1;
  UpdateStatusRequestBody body = 2;
}
message UpdateStatusRequestBody {
  // 用户did
  string did = 1;
  // 用户状态，冻结/正常
  UserStatusEnum status = 2;
}
message UpdateStatusResponse {
  common.MessageHeader header = 1;
  UpdateStatusResponseBody body = 2;
}
message UpdateStatusResponseBody {
  common.ResponseStatus status = 1;
}
message UserListRequest {
  common.MessageHeader header = 1;
  UserListRequestBody body = 2;
}
message UserListRequestBody {
  // 当前页
  google.protobuf.Int32Value pageIndex = 3;
  // 每页大小
  google.protobuf.Int32Value pageSize = 4;
}
message UserListResponse {
  common.MessageHeader header = 1;
  UserListResponseBody body = 2;
}
message UserListResponseBody {
  common.ResponseStatus status = 1;
  repeated  UserDetail list = 2;
  // 总数
  uint64 total = 3;
}
message UserMetadata {
  string did = 1;
  string name = 2;
  string avatar = 3;
  string createdAt = 4;
  string updatedAt = 5;
  string signature = 6;
  string telephone = 7;
  string email = 8;
}

message UserState {
  string owner = 1;
  string did = 2;
  UserRoleEnum role = 3;
  UserStatusEnum status = 4;
  string createdAt = 5;
  string updatedAt = 6;
  string signature = 7;
}

message AddUserRequest {
  common.MessageHeader header = 1;
  AddUserRequestBody body = 2;
}

message AddUserRequestBody {
  UserMetadata user = 1;
}

message AddUserResponse {
  common.MessageHeader header = 1;
  AddUserResponseBody body = 2;
}

message AddUserResponseBody {
  common.ResponseStatus status = 1;
  UserMetadata user = 2;
}

message UpdateUserRequest {
  common.MessageHeader header = 1;
  UpdateUserRequestBody body = 2;
}

message UpdateUserRequestBody {
  UserMetadata user = 1;
}

message UpdateUserResponse {
  common.MessageHeader header = 1;
  UpdateUserResponseBody body = 2;
}

message UpdateUserResponseBody {
  common.ResponseStatus status = 1;
  UserMetadata user = 2;
}

message DeleteUserRequest {
  common.MessageHeader header = 1;
}

message DeleteUserResponse {
  common.MessageHeader header = 1;
  DeleteUserResponseBody body = 2;
}

message DeleteUserResponseBody {
  common.ResponseStatus status = 1;
}

message UserDetailRequest {
  common.MessageHeader header = 1;
}

message UserDetailResponse {
  common.MessageHeader header = 1;
  UserDetailResponseBody body = 2;
}

message UserDetailResponseBody {
  common.ResponseStatus status = 1;
  UserDetail detail = 2;
}

message UserDetail {
  UserMetadata user = 1;
  UserState state = 2;
}

enum UserStatusEnum {
  // 未知编码，是一种占位符
  USER_STATUS_UNKNOWN = 0;

  // 活跃：表示用户目前正在使用软件并与其进行交互
  USER_STATUS_ACTIVE = 1;

  // 离线：表示用户当前不处于活跃状态，但可能会随时返回
  USER_STATUS_OFFLINE = 2;

  // 禁用：表示用户的访问权限被暂时或永久性地限制
  USER_STATUS_DISABLE = 3;

  // 锁定：表示用户的账户被暂时性地冻结，通常是由于安全原因
  USER_STATUS_LOCK = 4;

  // 未验证：表示用户账户在创建后尚未通过验证
  USER_STATUS_UNVERIFIED = 5;

  // 删除：表示用户账户已经被永久删除，无法恢复
  USER_STATUS_DELETED = 6;

  // 休眠：表示用户账户由于长时间未活跃而被标记为休眠状态
  USER_STATUS_DORMANT = 7;

  // 冻结：表示用户账户在一段时间内暂时不可用
  USER_STATUS_FREEZE = 8;

  // 待审核：表示新用户注册后正在等待管理员或审核人员审批
  USER_STATUS_AUDIT = 9;

  // 审核未通过：表示管理员或审核人员拒绝了用户的注册请求
  USER_STATUS_REFUSED = 10;
}

enum UserRoleEnum {
  // 未知编码，是一种占位符
  USER_ROLE_UNKNOWN = 0;

  // 所有者
  USER_ROLE_OWNER = 1;

  // 普通用户
  USER_ROLE_NORMAL = 2;
}

