syntax = "proto3";
option go_package = "yeying/api/audit";
package yeying.api.audit;

import "yeying/api/common/message.proto";
import "yeying/api/common/code.proto";
import "yeying/api/common/model.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// 添加 Swagger 文档元数据
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yeying API";
    version: "1.0";
    contact: {
      name: "yeying-community";
      url: "https://github.com/yeying-community/yeying-idl.git";
      email: "yeying.community@gmail.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

/**
审批服务
发起应用访问申请->
查看审批详情->
 */
service Audit {
  /* 发起申请 */
  rpc Create(AuditCreateRequest) returns (AuditCreateResponse) {
    option (google.api.http) = {
      post: "/api/v1/audit/create"
      body: "*"
    };
  }
  /* 查看申请详情 */
  rpc Detail(AuditDetailRequest) returns (AuditDetailResponse) {
    option (google.api.http) = {
      post: "/api/v1/audit/detail"
      body: "*"
    };
  }
  /* 撤销申请 */
  rpc Cancel(AuditCancelRequest) returns (AuditCancelResponse) {
    option (google.api.http) = {
      post: "/api/v1/audit/cancel"
      body: "*"
    };
  }
  /* 通过 */
  rpc Approve(AuditApproveRequest) returns (AuditApproveResponse) {
    option (google.api.http) = {
      post: "/api/v1/audit/approve"
      body: "*"
    };
  }
  /* 拒绝 */
  rpc Reject(AuditRejectRequest) returns (AuditRejectResponse) {
    option (google.api.http) = {
      post: "/api/v1/audit/reject"
      body: "*"
    };
  }
  /* 列表 */
  rpc Search(AuditSearchRequest) returns (AuditSearchResponse) {
    option (google.api.http) = {
      post: "/api/v1/audit/search"
      body: "*"
    };
  }
}
message AuditCreateRequest {
  common.MessageHeader header = 1;
  AuditCreateRequestBody body = 2;
}
message AuditCreateRequestBody {
  AuditMetadata meta = 1;
}
message AuditCreateResponse {
  common.MessageHeader header = 1;
  AuditCreateResponseBody body = 2;
}
message AuditCreateResponseBody {
  common.ResponseStatus status = 1;
  AuditMetadata meta = 2;
}
message AuditDetailRequest {
  common.MessageHeader header = 1;
  AuditDetailRequestBody body = 2;
}
message AuditDetailRequestBody {
  string uid = 1;
}
message AuditDetailResponse {
  common.MessageHeader header = 1;
  AuditDetailResponseBody body = 2;
}
message AuditDetailResponseBody {
  common.ResponseStatus status = 1;
  AuditDetail detail = 2;
}
message AuditCancelRequest {
  common.MessageHeader header = 1;
  AuditCancelRequestBody body = 2;
}
message AuditCancelRequestBody {
  string uid = 1;
}
message AuditCancelResponse {
  common.MessageHeader header = 1;
  AuditCancelResponseBody body = 2;
}
message AuditCancelResponseBody {
  common.ResponseStatus status = 1;
  AuditMetadata meta = 2;
}
message AuditApproveRequest {
  common.MessageHeader header = 1;
  AuditApproveRequestBody body = 2;
}
message AuditApproveRequestBody {
  CommentMetadata metadata = 1;
}
message AuditApproveResponse {
  common.MessageHeader header = 1;
  AuditApproveResponseBody body = 2;
}
message AuditApproveResponseBody {
  common.ResponseStatus status = 1;
  CommentMetadata metadata = 2;
}

message AuditRejectRequest {
  common.MessageHeader header = 1;
  AuditRejectRequestBody body = 2;
}
message AuditRejectRequestBody {
  CommentMetadata metadata = 1;
}
message AuditRejectResponse {
  common.MessageHeader header = 1;
  AuditRejectResponseBody body = 2;
}
message AuditRejectResponseBody {
  common.ResponseStatus status = 1;
  CommentMetadata metadata = 2;
}
message AuditSearchRequest {
  common.MessageHeader header = 1;
  AuditSearchRequestBody body = 2;
}
message AuditSearchRequestBody {
  AuditSearchCondition condition = 1;
  common.RequestPage page = 2;
}
message AuditSearchResponse {
  common.MessageHeader header = 1;
  AuditSearchResponseBody body = 2;
}
message AuditSearchResponseBody {
  common.ResponseStatus status = 1;
  repeated AuditDetail detail = 2;
  common.ResponsePage page = 3;
}

message AuditDetail {
  AuditMetadata meta = 1;
  repeated CommentMetadata commentMeta = 2;
}

message AuditSearchCondition {
  /**
  审批人
   */
  string approver = 1;
  /**
  应用/服务名称
   */
  string name = 2;

  /**
  申请类型：应用/服务
 */
  string type = 3;
  /**
  申请人
 */
  string applicant = 4;
  /**
  开始时间
   */
  string startTime = 5;
  /**
  结束时间
  */
  string endTime = 6;
}

message AuditMetadata {
  /**
     * 主键uid
     */
    string uid = 1;

  /**
   * 应用元数据 / 服务元数据序例化 json 字符串
   *
   */
    string appOrServiceMetadata = 2;

  /**
   * 申请人身份，存字符串，使用 :: 拼接
   * 拼接格式 did::name
   */
    string applicant = 3;

  /**
   * 审批人身份：可能有多个人审批人，使用 list json
   * 拼接格式 did::name
   *
   */
    string approver = 5;

  /**
   * 申请原因
   */
    string reason = 7;

  /**
   * 创建时间
   */
    string createdAt = 9;

  /**
   * 修改时间
   */
    string updatedAt = 10;
  /**
   * 签名
   */
    string signature = 11;

  /**
  申请类型：应用/服务
  */
    string auditType = 12;
}

/**
审批意见表
 */
message CommentMetadata {
  /** 主键 id */
  string uid = 1;
  /** 审计表 id */
  string auditId = 2;
  /** 审批备注文字 id */
  string text = 3;
  /** 审批状态 id */
  CommentStatusEnum status = 4;
  /** 创建时间 */
  string createdAt = 5;
  /** 修改时间 */
  string updatedAt = 6;
  /** 签名 */
  string signature = 7;
}

enum CommentStatusEnum {
  // 通过
  COMMENT_STATUS_AGREE = 0;
  // 拒绝
  COMMENT_STATUS_REJECT = 1;
}

